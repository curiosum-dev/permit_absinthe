name: Bug Report
description: File a bug report to help us improve Permit.Absinthe
title: "[Bug]: "
labels: ["bug", "triage"]
assignees:
  - vincentvanbush

body:
  - type: markdown
    attributes:
      value: |
        Thanks for taking the time to fill out this bug report! Please provide as much detail as possible to help us understand and reproduce the issue.

  - type: input
    id: permit-absinthe-version
    attributes:
      label: Permit.Absinthe version
      description: What version of Permit.Absinthe are you using?
      placeholder: e.g., 0.2.4
    validations:
      required: true

  - type: input
    id: absinthe-version
    attributes:
      label: Absinthe version
      description: What version of Absinthe are you using?
      placeholder: e.g., 1.7.0
    validations:
      required: true

  - type: input
    id: elixir-version
    attributes:
      label: Elixir/OTP version
      description: What version of Elixir and OTP are you using?
      placeholder: e.g., Elixir 1.17.0, OTP 27
    validations:
      required: true

  - type: textarea
    id: description
    attributes:
      label: Bug description
      description: A clear and concise description of what the bug is.
      placeholder: Describe what happened and what you expected to happen
    validations:
      required: true

  - type: textarea
    id: reproduction
    attributes:
      label: Steps to reproduce
      description: Detailed steps to reproduce the behavior
      placeholder: |
        1. Set up Permit.Absinthe with...
        2. Configure authorization with...
        3. Execute GraphQL query through schema...
        4. See authorization error/unexpected behavior...
    validations:
      required: true

  - type: textarea
    id: schema-code
    attributes:
      label: Absinthe schema integration code
      description: Please provide your schema setup using Permit.Absinthe
      render: elixir
      placeholder: |
        defmodule MyAppWeb.Schema do
          use Absinthe.Schema
          use Permit.Absinthe, authorization_module: MyApp.Authorization

          query do
            field :posts, list_of(:post) do
              permit action: :read
              resolve &load_and_authorize/2
            end
          end

          object :post do
            permit schema: MyApp.Blog.Post
            field :id, :id
            field :title, :string
          end
        end

  - type: textarea
    id: permissions-code
    attributes:
      label: Authorization/Permissions code
      description: Please provide your authorization and permissions code that Permit.Absinthe integrates with
      render: elixir
      placeholder: |
        defmodule MyApp.Authorization do
          use Permit.Ecto,
            permissions_module: MyApp.Permissions,
            repo: MyApp.Repo
        end

        defmodule MyApp.Permissions do
          use Permit.Ecto.Permissions, actions_module: Permit.Actions.CrudActions

          def can(user) do
            permit()
            |> allow(:read, MyApp.Blog.Post, condition: [author_id: user.id])
          end
        end

  - type: textarea
    id: graphql-query
    attributes:
      label: GraphQL query/mutation
      description: The GraphQL query or mutation that causes the issue
      render: graphql
      placeholder: |
        query {
          posts {
            id
            title
          }
        }

  - type: textarea
    id: expected-behavior
    attributes:
      label: Expected behavior
      description: What did you expect to happen?
    validations:
      required: true

  - type: textarea
    id: actual-behavior
    attributes:
      label: Actual behavior
      description: What actually happened? Include GraphQL error responses if any.
    validations:
      required: true

  - type: textarea
    id: logs
    attributes:
      label: Error logs/stack trace
      description: If applicable, add error logs or stack traces
      render: shell

  - type: textarea
    id: additional-context
    attributes:
      label: Additional context
      description: Add any other context about the problem here (Phoenix version, specific middleware used, custom resolvers, dataloader setup, etc.)

  - type: checkboxes
    id: terms
    attributes:
      label: Checklist
      description: Please confirm the following
      options:
        - label: I have searched for existing issues before creating this one
          required: true
        - label: I have provided all the requested information
          required: true
        - label: This is a bug report, not a feature request or question. For general questions, please use [Elixir Slack's Permit channel](https://elixir-lang.slack.com/archives/C091Q5S0GDU).
          required: true
